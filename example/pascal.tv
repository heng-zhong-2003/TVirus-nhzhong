let pascalNext = \l. match l with
    | Nil() -> Nil()
    | Cons(x, Nil()) -> Nil()
    | Cons(x, Cons(y, xs)) -> Cons(x + y, pascalNext(xs))

let pascal = \l. match l with
    | Nil() -> 0
    | Cons(x, Nil()) -> x
    | xs -> pascal(pascalNext(xs))

let list1 = \x. Cons(x, Nil())

let repeat = \x, l. if (l == 0) { list1(x) } else { Cons(x, repeat(x, (l - 1))) }

let main = pascal(repeat(1, 300000))
